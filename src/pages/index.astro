---
import Data from "../data/links.json";
import Link from "../Components/Link.astro";
import Searchbar from "../Components/Searchbar.svelte";
import Favorites from "../Components/Favorites.astro";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="description" content="custom new tab web page" />
    <title>New Tab</title>
  </head>
  <body class="body">
    <header class="relative">
      <Favorites />
    </header>
    <main
      class="container h-screen pt-20 flex flex-row-reverse justify-center w-full m-auto relative"
    >
      <Searchbar client:visible />
      <div
        class="bg-white flex relative rounded-3xl shadow-lg w-fit  h-fit justify-center top-auto flex-col"
      >
        {
          Data.map((section) => (
            <div class="cursor-pointer relative text-center rounded-full px-4 py-2 category">
              <h3 class="text-xl" title={section.tema}>
                <img
                  alt={section.tema}
                  src={section.icon}
                  width="50px"
                  class="hover:scale-95"
                />
              </h3>
              <div class="close absolute overflow-hidden  min-w-full top-2 left-20 bg-white rounded">
                <div class="flex flex-col ">
                  {section.links.map((link) => (
                    <Link titulo={link.nombre} url={link.url} />
                  ))}
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </main>
  </body>
  <script>
    let categories = document.querySelectorAll(".category");

    for (let i = 0; i < categories.length; i++) {
      let categorie = categories[i];
      let children = categorie.children[1];
      categorie.onclick = function () {
        close_all(categories, i);
        if (children.classList.contains("open")) {
          children.classList.add("close");
          children.classList.remove("open");
        } else {
          children.classList.add("open");
          children.classList.remove("close");
        }
      };
    }

    function close_all(categories, index) {
      for (let i = 0; i < categories.length; i++) {
        let categorie = categories[i];
        let children = categorie.children[1];
        if (i != index) {
          children.classList.remove("open");
          children.classList.remove("close");
          children.classList.add("close");
        }
      }
    }
  </script>
</html>
<style>
  @import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

  * {

    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  .body {
    font-family: 'Poppins', sans-serif;
    color: #121212;
    position: relative;
    background-color: #121212;
    overflow: hidden;
  } 
  .body::before {
    content: "";
    background-image: url("public/background.jpg");
    background-size: cover;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0.4;
  }
  .close {
    display: none;
  
  }
</style>
